// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
  output = "../node_modules/.prisma/client" 
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  name        String
  email       String @unique
  password    String
  id          String @id @default(uuid())
  plants      Plant[]
  diaries     Diary[]
  waterLogs   WaterLog[]
  chatLogs    ChatLog[]
}

model Plant {
  id          String @id @default(uuid())
  // name        String
  species     String
  speciesName String
  user        User @relation(fields: [userId],references: [id])
  userId      String
  diaries     Diary[]
  waterLogs   WaterLog[]
}

model Diary {
  id          String @id @default(uuid())
  plant       Plant @relation(fields: [plantId],references: [id])
  plantId     String
  content     String //メモ
  healthState Int //健康状態
  recordedAt  DateTime @default(now()) // 記録日
  user        User @relation(fields: [userId],references: [id])
  userId      String
  growthState       Int // イベント
}

model WaterLog {
  id          String @id @default(uuid())
  plant       Plant @relation(fields: [plantId],references: [id])
  plantId     String
  user        User @relation(fields: [userId],references: [id])
  userId      String
  wateredAt   DateTime @default(now()) // 水やりの時間
}

model ChatLog {
  id          String   @id @default(uuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  message     String   
  sender      String   
  recordedAt  DateTime @default(now()) // チャット記録日時
}

